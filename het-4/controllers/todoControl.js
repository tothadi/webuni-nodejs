const { todos } = require('../db/loki');
const uuid = require('uuid');


/**
 * Returns all todos in JSON array.
 * @param {*} req
 * @param {*} res
 */
function allTodos(req, res) {
    try {
        res.json(todos.find());
    } catch (err) {
        return res.json({
            err
        });
    }
}
module.exports.allTodos = allTodos;



/**
 * Returns a todo by :id encoded in request URL in JSON.
 * @param {*} req
 * @param {*} res
 * @param {*} next
 */
function oneTodo(req, res, next) {

    try {
        res.locals.todo = todos.findOne({ id: req.params.id })
        return next();
    } catch (err) {
        return res.json({
            err
        });
    }

}
module.exports.oneTodo = oneTodo;



/**
 * 
 * @param {*} req 
 * @param {*} res 
 */
function sendTodo(req, res) {
    res.send(res.locals.todo)
}
module.exports.sendTodo = sendTodo;



/**
 * Creates a new todo from data arriving in req.body as JSON. id generated by server. Returns the created todo in JSON with generated id.
 * @param {*} req
 * @param {*} res
 */
function newTodo(req, res) {
    if (typeof req.body.todo == "undefined") {
        return res.status(400).json({
            error: "Error: missing todo!",
        });
    }

    try {
        return res.json(
            todos.insert({
                id: uuid.v4(),
                todo: req.body.todo,
            })
        );

    } catch (err) {
        return res.json({
            error: err.message
        });
    }
}
module.exports.newTodo = newTodo;



/**
 * Updates data of the todo specified by :id.
 * @param {*} req
 * @param {*} res
 */
function updateTodo(req, res) {
    if (typeof req.body.todo == "undefined") {
        return res.status(400).json({
            error: "Error: missing todo!",
        });
    }

    try {
        return res.json({
            todo: todos.update(res.locals.todo)
        });

    } catch (err) {
        return res.json({
            error: err.message
        });
    }
}
module.exports.updateTodo = updateTodo;



/**
 * Deletes the todo specified by :_id.
 * @param {*} req
 * @param {*} res
 */
function delTodo(req, res) {
    try {
        return res.json({
            todo: todos.remove(res.locals.todo)
        });
    } catch (err) {
        return res.json({
            error: err.message
        });
    }
}
module.exports.delTodo = delTodo;



/**
 * Finds a todo by text and returns it.
 * @param {*} req 
 * @param {*} res 
 */
function searchTodo(req, res) {
    if (typeof req.body.todo == "undefined") {
        return res.status(400).json({
            error: "Error: missing todo!",
        });
    }

    try {
        return res.json(
            { todo: todos.findOne({ todo: req.body.todo }) }
        );
    } catch (err) {
        return res.json({
            error: err.message
        });
    }
}
module.exports.searchTodo = searchTodo;